# =================================
# Goedamjip Docker 환경 변수 템플릿
# =================================
# 이 파일을 .env로 복사하고 실제 값으로 수정하세요.
# cp .env.docker.example .env

# =================================
# 서버 설정
# =================================
HOST=0.0.0.0
PORT=1337

# =================================
# Strapi 보안 키들 (필수 변경!)
# =================================
# 다음 명령어로 랜덤 키 생성 가능:
# openssl rand -base64 32

APP_KEYS="toBeModified1,toBeModified2"
API_TOKEN_SALT=tobemodified
ADMIN_JWT_SECRET=tobemodified
TRANSFER_TOKEN_SALT=tobemodified
JWT_SECRET=tobemodified
ENCRYPTION_KEY=tobemodified

# =================================
# 데이터베이스 설정 (Supabase)
# =================================
DATABASE_CLIENT=postgres
DATABASE_URL=your-supabase-database-url
DATABASE_HOST=your-supabase-host
DATABASE_PORT=5432
DATABASE_NAME=postgres
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=your-supabase-password
DATABASE_SSL=true

# =================================
# Supabase 설정 (파일 업로드)
# =================================
SUPABASE_URL=your-supabase-project-url
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_BUCKET=your-bucket-name
SUPABASE_DIRECTORY=""

# =================================
# Docker 전용 설정
# =================================
# Node.js 환경
NODE_ENV=production

# 메모리 제한 (Termux용 최적화)
NODE_OPTIONS="--max-old-space-size=1024"

# =================================
# 추가 설정 (선택사항)
# =================================
# 로그 레벨
LOG_LEVEL=info

# CORS 설정 (필요시)
# CORS_ORIGIN=http://localhost:3000

# =================================
# Termux 사용 가이드
# =================================
# 1. 이 파일을 .env로 복사:
#    cp .env.docker.example .env
#
# 2. 필수 값들 수정:
#    - APP_KEYS, JWT_SECRET 등 보안 키들
#    - DATABASE_URL, SUPABASE_URL 등 Supabase 정보
#
# 3. Docker 실행:
#    ./scripts/termux-run.sh
#
# 4. 접속:
#    http://localhost:1337

# =================================
# 보안 주의사항
# =================================
# ⚠️  이 파일에는 민감한 정보가 포함됩니다.
# ⚠️  .env 파일은 절대 버전 관리에 포함하지 마세요.
# ⚠️  실제 운영시에는 복잡한 랜덤 키를 사용하세요.